@use "../../styles/breakpoints.scss" as bp;
@import "../../styles/tokens.css";
@import "../../styles/animations.css";

.tab {
  composes: bodyM from "../../styles/typography.css";
  composes: colors from "../../styles/animations.css";

  font-weight: 700;
  border: unset;
  background: unset;
  padding: unset;

  display: flex;
  flex-direction: column;
  white-space: nowrap;
  cursor: pointer;

  block-size: 2.625rem;

  @media (width > bp.$medium) {
    block-size: 3.125rem;
  }

  &:focus {
    outline: 2px solid var(--Inverse);
    /* Actually, the pill tab when is not selected has a #000 outline in the Figma design
     * I keep it consistent using always --Inverse color 
     */
    outline-offset: 2px;
  }

  /* PILL variant */
  &.pill {
    border-radius: 100px;
    border: 1px solid;
    padding: var(--spacing-0) var(--spacing-xs);

    @media (width > bp.$medium) {
      padding-inline: var(--spacing-s);
    }

    /* selected state is true (inferred by aria-selected) */
    &[aria-selected="true"] {
      color: var(--OnInverse);
      border-color: var(--Inverse);
      background-color: var(--Inverse);

      &:focus {
        background-color: var(--Inverse);
        border-color: var(--Inverse);
      }

      &:hover {
        background-color: var(--InverseHover);
        border-color: var(--InverseHover);
      }

      &:active {
        background-color: var(--InverseActive);
        border-color: var(--InverseActive);
      }
    }

    /* selected state is false (inferred by aria-selected) */
    &[aria-selected="false"] {
      /* defining a starting color with alpha 0 for the transition (not defined on Figma) */
      --Surface: hsla(var(--InverseActive), 0);

      color: var(--OnNeutral);
      border-color: var(--Outline);
      background-color: var(--Surface);

      &:focus {
        background-color: var(--Surface);
      }

      &:hover {
        background-color: var(--SurfaceHover);
      }

      &:active {
        background-color: var(--SurfaceActive);
      }
    }
  }

  /* UNDERLINE variant */
  &.underline {
    border-radius: var(--radius-2xs);

    /* defining a starting color with alpha 0 for the transition (not defined on Figma) */
    --underline-color: hsla(var(--OutlineHover), 0);

    &[aria-selected="true"] {
      --underline-color: var(--Inverse);
    }
    &[aria-selected="false"]:is(:active, :hover, :focus) {
      --underline-color: var(--OutlineHover);
    }

    /* The underline is created with a pseudoelement instead of a border-bottom
    * because a border-radius is defined.
    */
    &::after {
      content: ""/"";
      block-size: 3px;
      display: block;
      border-radius: 100px;
      transition: inherit;
      background: var(--underline-color);
    }
  }
}

.tab__label {
  display: flex;
  flex-wrap: nowrap;
  flex: 1;
  align-items: center;
  gap: var(--spacing-2xs);
}
